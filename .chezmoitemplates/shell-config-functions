#!/usr/bin/env bash

# Shell configuration generation functions - shared across all scripts  
# Usage: {{ template "shell-config-functions" . }}

# Function to create shell configuration directory
ensure_shell_config_dir() {
    local config_dir="$HOME/.config/shell"
    
    if [[ ! -d "$config_dir" ]]; then
        mkdir -p "$config_dir" || {
            echo "⚠️  Failed to create $config_dir" >&2
            return 1
        }
    fi
    
    return 0
}

# Function to write tool configuration to shell config directory
write_tool_config() {
    local tool_name="$1"
    local config_content="$2"
    local config_dir="$HOME/.config/shell"
    local config_file="$config_dir/${tool_name}.sh"
    
    # Ensure directory exists
    ensure_shell_config_dir || return 1
    
    # Write configuration
    cat > "$config_file" << EOF
#!/usr/bin/env bash
# Auto-generated configuration for $tool_name
# Generated: $(date)

$config_content
EOF
    
    chmod +x "$config_file"
    echo "✅ Created shell config: $config_file"
    return 0
}

# Function to remove tool configuration 
remove_tool_config() {
    local tool_name="$1"
    local config_file="$HOME/.config/shell/${tool_name}.sh"
    
    if [[ -f "$config_file" ]]; then
        rm "$config_file"
        echo "🗑️  Removed shell config: $config_file"
    fi
}