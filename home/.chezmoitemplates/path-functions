#!/usr/bin/env bash

# Path management functions - shared across all scripts
# Usage: {{ template "path-functions" . }}

# Function to safely add directories to PATH, avoiding duplicates
path_add() {
    local dir="$1"
    
    # Expand tilde and environment variables
    dir=$(eval echo "$dir")
    
    # Check if directory exists and is not already in PATH
    if [[ -d "$dir" && ":$PATH:" != *":$dir:"* ]]; then
        export PATH="$dir:$PATH"
        return 0
    fi
    return 1
}

# Function to safely add directories to end of PATH
path_append() {
    local dir="$1"
    
    # Expand tilde and environment variables  
    dir=$(eval echo "$dir")
    
    # Check if directory exists and is not already in PATH
    if [[ -d "$dir" && ":$PATH:" != *":$dir:"* ]]; then
        export PATH="$PATH:$dir"
        return 0
    fi
    return 1
}

# Function to remove directory from PATH
path_remove() {
    local dir="$1"
    dir=$(eval echo "$dir")
    
    # Remove from PATH using parameter expansion
    PATH=$(echo "$PATH" | sed "s|:$dir||g" | sed "s|$dir:||g" | sed "s|$dir$||g")
    export PATH
}

# Function to deduplicate PATH (call at end of config)
path_dedupe() {
    local new_path=""
    local IFS=":"
    
    for dir in $PATH; do
        if [[ -n "$dir" && ":$new_path:" != *":$dir:"* ]]; then
            if [[ -z "$new_path" ]]; then
                new_path="$dir"
            else
                new_path="$new_path:$dir"
            fi
        fi
    done
    
    export PATH="$new_path"
}