{{- if eq .chezmoi.os "windows" -}}
#!/usr/bin/env pwsh

# Install Scoop package manager and essential tools
# This script runs when its content changes

Write-Host "ü™ü Setting up Scoop package manager..." -ForegroundColor Green

function Test-Command($cmdname) {
    return [bool](Get-Command -Name $cmdname -ErrorAction SilentlyContinue)
}

# Install Scoop if not already installed
if (-not (Test-Command scoop)) {
    Write-Host "üì¶ Installing Scoop..." -ForegroundColor Blue
    try {
        # Set execution policy for current user
        Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
        
        # Install Scoop
        irm get.scoop.sh | iex
        
        Write-Host "‚úÖ Scoop installed successfully" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è  Scoop installation failed: $_" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚úÖ Scoop already installed" -ForegroundColor Green
}

# Add extra buckets for more packages
$buckets = @('extras', 'nerd-fonts')
foreach ($bucket in $buckets) {
    try {
        scoop bucket list | Where-Object { $_ -match $bucket } | Out-Null
        if ($LASTEXITCODE -ne 0) {
            Write-Host "üì¶ Adding Scoop bucket: $bucket" -ForegroundColor Blue
            scoop bucket add $bucket
        } else {
            Write-Host "‚úÖ Scoop bucket '$bucket' already added" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ö†Ô∏è  Failed to add bucket '$bucket': $_" -ForegroundColor Yellow
    }
}

# Install essential CLI tools via Scoop
$scoopPackages = @(
    'fzf',
    'fd', 
    'zoxide',
    'ripgrep',
    'bat',
    'eza',
    'git-delta',
    'jq'
)

Write-Host "üì¶ Installing essential CLI tools via Scoop..." -ForegroundColor Blue
foreach ($package in $scoopPackages) {
    try {
        if (-not (Test-Command $package)) {
            Write-Host "Installing $package..." -ForegroundColor Cyan
            scoop install $package
        } else {
            Write-Host "‚úÖ $package already installed" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ö†Ô∏è  Failed to install $package: $_" -ForegroundColor Yellow
    }
}

Write-Host "‚úÖ Scoop setup completed!" -ForegroundColor Green
{{- end }}