#!/usr/bin/env pwsh

# Development Tools Installation for Windows
# PowerShell script to install curl-based development tools

{{ if .dev_computer -}}
Write-Host "ü™ü Installing curl-based development tools on Windows..." -ForegroundColor Green

function Test-Command($cmdname) {
    return [bool](Get-Command -Name $cmdname -ErrorAction SilentlyContinue)
}

# Development tools will be installed via mise after it's set up

# Mise (modern runtime version manager)
if (-not (Test-Command mise)) {
    Write-Host "üì¶ Installing Mise..." -ForegroundColor Blue
    try {
        irm https://mise.run | iex
    } catch {
        Write-Host "‚ö†Ô∏è  Mise installation failed: $_" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚úÖ Mise already installed" -ForegroundColor Green
}

# Proto (unified toolchain manager)
if (-not (Test-Command proto)) {
    Write-Host "üì¶ Installing Proto..." -ForegroundColor Blue
    try {
        irm https://moonrepo.dev/install/proto.ps1 | iex
    } catch {
        Write-Host "‚ö†Ô∏è  Proto installation failed: $_" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚úÖ Proto already installed" -ForegroundColor Green
}

# Install development tools via mise (from config.toml)
if (Test-Command mise) {
    Write-Host "üì¶ Installing development tools via mise..." -ForegroundColor Blue
    try {
        mise install
        Write-Host "‚úÖ Development tools installed via mise" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è  Some mise tools failed to install: $_" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ö†Ô∏è  Mise not found - cannot install development tools" -ForegroundColor Red
}

Write-Host "‚úÖ Windows curl-based development tools installation completed!" -ForegroundColor Green
{{- else }}
Write-Host "üè† Skipping development tools installation (not a dev computer)" -ForegroundColor Yellow
{{- end }}