{{ if eq .osid "linux-debian" "linux-raspbian" "linux-ubuntu" -}}

{{ $packages := list
     "age"
     "bat"
     "curl"
     "fd-find"
     "ffmpeg"
     "fzf"
     "gh"
     "git"
     "git-lfs"
     "gnupg"
     "jq"
     "neovim"
     "pkg-config"
     "ripgrep"
     "shellcheck"
     "tmux"
     "units"
     "unzip"
     "wget"
     "xz-utils"
     "zsh" -}}
{{- /* Core dev tools handled by mise: node, pnpm, deno, bun, python, uv, go, rust */ -}}
{{ $snaps := list -}}
{{ $classicSnaps := list -}}

{{ if eq .osid "linux-ubuntu" -}}
{{   $packages = mustAppend $packages "btop" -}}
{{ end -}}

{{ if not .headless -}}
{{   $packages = mustAppend $packages "xclip" -}}
{{   $classicSnaps = mustAppend $classicSnaps "code" -}}
{{ end -}}

{{ $sudo := "sudo " -}}
{{ if eq .chezmoi.username "root" -}}
{{   $sudo = "" -}}
{{ end -}}

#!/bin/bash

set -eufo pipefail

echo "🐧 Installing system packages on Linux..."

{{ $sudo }}apt-get update
{{ $sudo }}apt-get install -y {{ $packages | join " " }}

{{ if lookPath "snap" }}
{{   range $snaps }}
( snap info {{ . }} | grep -q ^installed: ) || {{ $sudo }}snap install {{ . }}
{{   end }}
{{   range $classicSnaps }}
( snap info {{ . }} | grep -q ^installed: ) || {{ $sudo }}snap install --classic {{ . }}
{{   end }}
{{ end }}

# Always install/update zoxide to ensure latest version and correct location
echo "📦 Installing/updating zoxide..."
curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash

{{ if .dev_computer -}}
echo "🐧 Installing development tools via mise..."

# Install mise (modern runtime version manager)
# Always install/update mise to ensure latest version and correct location
echo "📦 Installing/updating mise..."
curl https://mise.run | sh || {
    echo "⚠️  Mise installation failed"
    exit 1
}

# Add mise to PATH for this session
export PATH="$HOME/.local/bin:$PATH"

# Install development tools via mise (from config.toml)
echo "📦 Installing development tools via mise..."
mise install 2>/dev/null || echo "⚠️  Some mise tools failed to install"

# Install non-mise tools
# Atuin (shell history replacement) 
# Always install/update Atuin to ensure latest version and correct location
echo "📦 Installing/updating Atuin..."
curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh -s -- --no-modify-path || echo "⚠️  Atuin installation failed"

echo "✅ Development tools installation completed!"
{{- else }}
echo "🏠 Skipping development tools installation (not a dev computer)"
{{- end }}

echo "✅ Linux installation completed!"

{{ end -}}
