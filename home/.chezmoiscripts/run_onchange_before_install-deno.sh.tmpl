{{- if eq .chezmoi.os "windows" -}}
# PowerShell script for Windows
if (Get-Command deno -ErrorAction SilentlyContinue) {
    Write-Host "Deno is already installed: $(deno --version | Select-String 'deno')"
    exit 0
}

Write-Host "Installing Deno..."
$env:DENO_INSTALL = "$env:USERPROFILE\.deno"
iwr https://deno.land/x/install/install.ps1 -useb | iex

if (Get-Command deno -ErrorAction SilentlyContinue) {
    Write-Host "Deno installed successfully: $(deno --version | Select-String 'deno')"
} else {
    Write-Host "Error: Deno installation failed"
    exit 1
}
{{- else -}}
#!/bin/bash

set -eufo pipefail

# Install Deno
echo "Installing Deno..."

# Check if Deno is already installed
{{- if eq .chezmoi.os "darwin" }}
if command -v deno >/dev/null 2>&1; then
{{- else }}
if [[ -f "$HOME/.deno/bin/deno" ]]; then
{{- end }}
    echo "Deno is already installed: $(deno --version | head -1)"
    exit 0
fi

# Install Deno
echo "Installing Deno binary..."
export DENO_INSTALL="$HOME/.deno"
mkdir -p "$DENO_INSTALL/bin"

{{- if eq .chezmoi.os "darwin" }}
# macOS - use official installer
curl -fsSL https://deno.land/x/install/install.sh | bash -s
{{- else }}
# Linux - manual installation for better control
ARCH=$(uname -m)
case $ARCH in
    x86_64) DENO_ARCH="x86_64" ;;
    aarch64|arm64) DENO_ARCH="aarch64" ;;
    *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
esac

DENO_VERSION=$(curl -fsSL https://api.github.com/repos/denoland/deno/releases/latest | grep '"tag_name"' | cut -d'"' -f4)
DENO_URL="https://github.com/denoland/deno/releases/download/${DENO_VERSION}/deno-${DENO_ARCH}-unknown-linux-gnu.zip"

curl -fsSL "$DENO_URL" -o "/tmp/deno.zip"
unzip -q "/tmp/deno.zip" -d "/tmp"
mv "/tmp/deno" "$DENO_INSTALL/bin/deno"
chmod +x "$DENO_INSTALL/bin/deno"
rm "/tmp/deno.zip"
{{- end }}

# Verify installation
export PATH="$DENO_INSTALL/bin:$PATH"
if command -v deno >/dev/null 2>&1; then
    echo "Deno installed successfully: $(deno --version | head -1)"
else
    echo "Error: Deno installation failed"
    exit 1
fi
{{- end }}